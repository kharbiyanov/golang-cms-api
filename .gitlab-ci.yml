image: golang:latest

variables:
  REPO_NAME: git.osg.uz/cms/development/api

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

before_script:
  - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )"
  - eval $(ssh-agent -s)
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - test

build:
  extends: .go-cache
  stage: build
  artifacts:
    paths:
      - main
      - plugins
  only:
    - master
  script:
    - sh run-build.sh

deploy to test:
  stage: test
  environment:
    name: test
    url: https://cms.ux.uz/test/api/graphql/
  only:
    - master
  script:
    - echo "Deploy to test server"
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -T $SSH_USER@$SSH_HOST sh /home/cms/docker/cms.ux.uz/test/api/stop.sh
    - scp main $SSH_USER@$SSH_HOST:/home/cms/docker/cms.ux.uz/test/api
    - scp -r plugins $SSH_USER@$SSH_HOST:/home/cms/docker/cms.ux.uz/test/api
    - scp rbac_model.conf $SSH_USER@$SSH_HOST:/home/cms/docker/cms.ux.uz/test/api
    - ssh -T $SSH_USER@$SSH_HOST sh /home/cms/docker/cms.ux.uz/test/api/start.sh